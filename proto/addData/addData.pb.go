// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/addData.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TenantInput struct {
	TenantName           string   `protobuf:"bytes,1,opt,name=tenant_name,json=tenantName,proto3" json:"tenant_name,omitempty"`
	TenantDomain         string   `protobuf:"bytes,2,opt,name=tenant_domain,json=tenantDomain,proto3" json:"tenant_domain,omitempty"`
	DomainType           Type     `protobuf:"varint,3,opt,name=domain_type,json=domainType,proto3,enum=proto.Type" json:"domain_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TenantInput) Reset()         { *m = TenantInput{} }
func (m *TenantInput) String() string { return proto.CompactTextString(m) }
func (*TenantInput) ProtoMessage()    {}
func (*TenantInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_54d1de6f3e51831e, []int{0}
}

func (m *TenantInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TenantInput.Unmarshal(m, b)
}
func (m *TenantInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TenantInput.Marshal(b, m, deterministic)
}
func (m *TenantInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TenantInput.Merge(m, src)
}
func (m *TenantInput) XXX_Size() int {
	return xxx_messageInfo_TenantInput.Size(m)
}
func (m *TenantInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TenantInput.DiscardUnknown(m)
}

var xxx_messageInfo_TenantInput proto.InternalMessageInfo

func (m *TenantInput) GetTenantName() string {
	if m != nil {
		return m.TenantName
	}
	return ""
}

func (m *TenantInput) GetTenantDomain() string {
	if m != nil {
		return m.TenantDomain
	}
	return ""
}

func (m *TenantInput) GetDomainType() Type {
	if m != nil {
		return m.DomainType
	}
	return Type_Promotional
}

type CategoryInput struct {
	CategoryName         string   `protobuf:"bytes,1,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	TenantName           string   `protobuf:"bytes,2,opt,name=tenant_name,json=tenantName,proto3" json:"tenant_name,omitempty"`
	CategoryType         Type     `protobuf:"varint,3,opt,name=category_type,json=categoryType,proto3,enum=proto.Type" json:"category_type,omitempty"`
	IsVisible            bool     `protobuf:"varint,4,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CategoryInput) Reset()         { *m = CategoryInput{} }
func (m *CategoryInput) String() string { return proto.CompactTextString(m) }
func (*CategoryInput) ProtoMessage()    {}
func (*CategoryInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_54d1de6f3e51831e, []int{1}
}

func (m *CategoryInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryInput.Unmarshal(m, b)
}
func (m *CategoryInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryInput.Marshal(b, m, deterministic)
}
func (m *CategoryInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryInput.Merge(m, src)
}
func (m *CategoryInput) XXX_Size() int {
	return xxx_messageInfo_CategoryInput.Size(m)
}
func (m *CategoryInput) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryInput.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryInput proto.InternalMessageInfo

func (m *CategoryInput) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *CategoryInput) GetTenantName() string {
	if m != nil {
		return m.TenantName
	}
	return ""
}

func (m *CategoryInput) GetCategoryType() Type {
	if m != nil {
		return m.CategoryType
	}
	return Type_Promotional
}

func (m *CategoryInput) GetIsVisible() bool {
	if m != nil {
		return m.IsVisible
	}
	return false
}

type ProviderInput struct {
	ProviderName         string   `protobuf:"bytes,1,opt,name=provider_name,json=providerName,proto3" json:"provider_name,omitempty"`
	ProviderType         Type     `protobuf:"varint,2,opt,name=provider_type,json=providerType,proto3,enum=proto.Type" json:"provider_type,omitempty"`
	Token                string   `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProviderInput) Reset()         { *m = ProviderInput{} }
func (m *ProviderInput) String() string { return proto.CompactTextString(m) }
func (*ProviderInput) ProtoMessage()    {}
func (*ProviderInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_54d1de6f3e51831e, []int{2}
}

func (m *ProviderInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProviderInput.Unmarshal(m, b)
}
func (m *ProviderInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProviderInput.Marshal(b, m, deterministic)
}
func (m *ProviderInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProviderInput.Merge(m, src)
}
func (m *ProviderInput) XXX_Size() int {
	return xxx_messageInfo_ProviderInput.Size(m)
}
func (m *ProviderInput) XXX_DiscardUnknown() {
	xxx_messageInfo_ProviderInput.DiscardUnknown(m)
}

var xxx_messageInfo_ProviderInput proto.InternalMessageInfo

func (m *ProviderInput) GetProviderName() string {
	if m != nil {
		return m.ProviderName
	}
	return ""
}

func (m *ProviderInput) GetProviderType() Type {
	if m != nil {
		return m.ProviderType
	}
	return Type_Promotional
}

func (m *ProviderInput) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type DataResponse struct {
	Code                 StatusCode `protobuf:"varint,1,opt,name=code,proto3,enum=proto.StatusCode" json:"code,omitempty"`
	Meesage              string     `protobuf:"bytes,2,opt,name=meesage,proto3" json:"meesage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DataResponse) Reset()         { *m = DataResponse{} }
func (m *DataResponse) String() string { return proto.CompactTextString(m) }
func (*DataResponse) ProtoMessage()    {}
func (*DataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_54d1de6f3e51831e, []int{3}
}

func (m *DataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataResponse.Unmarshal(m, b)
}
func (m *DataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataResponse.Marshal(b, m, deterministic)
}
func (m *DataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataResponse.Merge(m, src)
}
func (m *DataResponse) XXX_Size() int {
	return xxx_messageInfo_DataResponse.Size(m)
}
func (m *DataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataResponse proto.InternalMessageInfo

func (m *DataResponse) GetCode() StatusCode {
	if m != nil {
		return m.Code
	}
	return StatusCode_Unknown
}

func (m *DataResponse) GetMeesage() string {
	if m != nil {
		return m.Meesage
	}
	return ""
}

func init() {
	proto.RegisterType((*TenantInput)(nil), "proto.TenantInput")
	proto.RegisterType((*CategoryInput)(nil), "proto.CategoryInput")
	proto.RegisterType((*ProviderInput)(nil), "proto.ProviderInput")
	proto.RegisterType((*DataResponse)(nil), "proto.DataResponse")
}

func init() {
	proto.RegisterFile("proto/addData.proto", fileDescriptor_54d1de6f3e51831e)
}

var fileDescriptor_54d1de6f3e51831e = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x95, 0xb2, 0xcb, 0x92, 0x49, 0xb3, 0x12, 0xde, 0x3d, 0x44, 0x2b, 0x21, 0xaa, 0xac,
	0x90, 0x7a, 0xa0, 0x0d, 0x6a, 0x41, 0xe2, 0x0a, 0xed, 0x85, 0x0b, 0xa0, 0x50, 0x71, 0xe8, 0xa5,
	0x72, 0xe3, 0x51, 0xb0, 0x88, 0xed, 0x28, 0x76, 0x2b, 0x55, 0xe2, 0xc2, 0xcb, 0xf0, 0x02, 0xbc,
	0x20, 0xaa, 0x1d, 0x87, 0x06, 0x0a, 0xa7, 0x64, 0xfe, 0xf9, 0x67, 0xfc, 0x69, 0x66, 0xe0, 0xa6,
	0x6e, 0x94, 0x51, 0x19, 0x65, 0x6c, 0x49, 0x0d, 0x9d, 0xda, 0x88, 0x5c, 0xda, 0xcf, 0x1d, 0x71,
	0xb9, 0x42, 0x09, 0xa1, 0xa4, 0x4b, 0xa5, 0xdf, 0x03, 0x88, 0x56, 0x28, 0xa9, 0x34, 0xef, 0x64,
	0xbd, 0x33, 0xe4, 0x29, 0x44, 0xc6, 0x86, 0x1b, 0x49, 0x05, 0x26, 0xc1, 0x28, 0x18, 0x87, 0x39,
	0x38, 0xe9, 0x3d, 0x15, 0x48, 0xee, 0x21, 0x6e, 0x0d, 0x4c, 0x09, 0xca, 0x65, 0x32, 0xb0, 0x96,
	0xa1, 0x13, 0x97, 0x56, 0x23, 0xcf, 0x21, 0x72, 0xd9, 0x8d, 0x39, 0xd4, 0x98, 0x3c, 0x18, 0x05,
	0xe3, 0xeb, 0x59, 0xe4, 0x9e, 0x9c, 0xae, 0x0e, 0x35, 0xe6, 0xe0, 0xf2, 0xc7, 0xff, 0xf4, 0x47,
	0x00, 0xf1, 0x82, 0x1a, 0x2c, 0x55, 0x73, 0x70, 0x14, 0xf7, 0x10, 0x17, 0xad, 0x70, 0xca, 0x31,
	0xf4, 0xa2, 0x25, 0xf9, 0x03, 0x75, 0xf0, 0x17, 0xea, 0x8b, 0x93, 0x2e, 0xff, 0xe2, 0xe8, 0x5a,
	0x1e, 0x23, 0xf2, 0x04, 0x80, 0xeb, 0xcd, 0x9e, 0x6b, 0xbe, 0xad, 0x30, 0xb9, 0x18, 0x05, 0xe3,
	0x47, 0x79, 0xc8, 0xf5, 0x67, 0x27, 0xa4, 0xdf, 0x20, 0xfe, 0xd8, 0xa8, 0x3d, 0x67, 0xd8, 0x74,
	0x9c, 0x75, 0x2b, 0xf4, 0x38, 0xbd, 0xe8, 0x31, 0x3a, 0x93, 0xc5, 0x18, 0x9c, 0xc1, 0xf0, 0x0e,
	0x8b, 0x71, 0x0b, 0x97, 0x46, 0x7d, 0x45, 0x69, 0x81, 0xc3, 0xdc, 0x05, 0xe9, 0x07, 0x18, 0x1e,
	0x77, 0x9a, 0xa3, 0xae, 0x95, 0xd4, 0x48, 0x9e, 0xc1, 0x45, 0xa1, 0x98, 0x7b, 0xf3, 0x7a, 0xf6,
	0xb8, 0x6d, 0xf7, 0xc9, 0x50, 0xb3, 0xd3, 0x0b, 0xc5, 0x30, 0xb7, 0x69, 0x92, 0xc0, 0x95, 0x40,
	0xd4, 0xb4, 0xf4, 0x23, 0xf2, 0xe1, 0xec, 0x67, 0x00, 0x57, 0x6f, 0xdc, 0xa1, 0x90, 0x97, 0x10,
	0x52, 0xc6, 0xdc, 0x25, 0x10, 0xe2, 0xd1, 0x7e, 0x1f, 0xc6, 0xdd, 0x4d, 0xab, 0xf5, 0x10, 0x5e,
	0x43, 0x44, 0x19, 0xf3, 0xbb, 0x23, 0xb7, 0xad, 0xa7, 0xb7, 0xcc, 0xff, 0x55, 0xfa, 0x69, 0x76,
	0x95, 0xbd, 0xf1, 0x9e, 0xad, 0x7c, 0xfb, 0x6a, 0x3d, 0x2f, 0xb9, 0xf9, 0xb2, 0xdb, 0x4e, 0x0b,
	0x25, 0xb2, 0xb5, 0x12, 0xd4, 0xa8, 0x0c, 0x05, 0xe5, 0xd5, 0x44, 0x63, 0xb3, 0xe7, 0x05, 0x4e,
	0x8a, 0x8a, 0xa3, 0x34, 0x93, 0x52, 0x55, 0x54, 0x96, 0x99, 0xed, 0xb1, 0x7d, 0x68, 0x3f, 0xf3,
	0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x0d, 0xc6, 0x9c, 0xf5, 0x21, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AddDataClient is the client API for AddData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddDataClient interface {
	AddTenant(ctx context.Context, in *TenantInput, opts ...grpc.CallOption) (*DataResponse, error)
	AddCategory(ctx context.Context, in *CategoryInput, opts ...grpc.CallOption) (*DataResponse, error)
	AddProvider(ctx context.Context, in *ProviderInput, opts ...grpc.CallOption) (*DataResponse, error)
}

type addDataClient struct {
	cc grpc.ClientConnInterface
}

func NewAddDataClient(cc grpc.ClientConnInterface) AddDataClient {
	return &addDataClient{cc}
}

func (c *addDataClient) AddTenant(ctx context.Context, in *TenantInput, opts ...grpc.CallOption) (*DataResponse, error) {
	out := new(DataResponse)
	err := c.cc.Invoke(ctx, "/proto.AddData/addTenant", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addDataClient) AddCategory(ctx context.Context, in *CategoryInput, opts ...grpc.CallOption) (*DataResponse, error) {
	out := new(DataResponse)
	err := c.cc.Invoke(ctx, "/proto.AddData/addCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addDataClient) AddProvider(ctx context.Context, in *ProviderInput, opts ...grpc.CallOption) (*DataResponse, error) {
	out := new(DataResponse)
	err := c.cc.Invoke(ctx, "/proto.AddData/addProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddDataServer is the server API for AddData service.
type AddDataServer interface {
	AddTenant(context.Context, *TenantInput) (*DataResponse, error)
	AddCategory(context.Context, *CategoryInput) (*DataResponse, error)
	AddProvider(context.Context, *ProviderInput) (*DataResponse, error)
}

// UnimplementedAddDataServer can be embedded to have forward compatible implementations.
type UnimplementedAddDataServer struct {
}

func (*UnimplementedAddDataServer) AddTenant(ctx context.Context, req *TenantInput) (*DataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTenant not implemented")
}
func (*UnimplementedAddDataServer) AddCategory(ctx context.Context, req *CategoryInput) (*DataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCategory not implemented")
}
func (*UnimplementedAddDataServer) AddProvider(ctx context.Context, req *ProviderInput) (*DataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProvider not implemented")
}

func RegisterAddDataServer(s *grpc.Server, srv AddDataServer) {
	s.RegisterService(&_AddData_serviceDesc, srv)
}

func _AddData_AddTenant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TenantInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddDataServer).AddTenant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddData/AddTenant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddDataServer).AddTenant(ctx, req.(*TenantInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddData_AddCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CategoryInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddDataServer).AddCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddData/AddCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddDataServer).AddCategory(ctx, req.(*CategoryInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddData_AddProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProviderInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddDataServer).AddProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddData/AddProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddDataServer).AddProvider(ctx, req.(*ProviderInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AddData",
	HandlerType: (*AddDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addTenant",
			Handler:    _AddData_AddTenant_Handler,
		},
		{
			MethodName: "addCategory",
			Handler:    _AddData_AddCategory_Handler,
		},
		{
			MethodName: "addProvider",
			Handler:    _AddData_AddProvider_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/addData.proto",
}
