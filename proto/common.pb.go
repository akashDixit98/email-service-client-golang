// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/common.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Type int32

const (
	Type_Promotional   Type = 0
	Type_Transactional Type = 1
)

var Type_name = map[int32]string{
	0: "Promotional",
	1: "Transactional",
}

var Type_value = map[string]int32{
	"Promotional":   0,
	"Transactional": 1,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{0}
}

type StatusCode int32

const (
	StatusCode_Unknown StatusCode = 0
	StatusCode_Ok      StatusCode = 1
	StatusCode_Failed  StatusCode = 2
)

var StatusCode_name = map[int32]string{
	0: "Unknown",
	1: "Ok",
	2: "Failed",
}

var StatusCode_value = map[string]int32{
	"Unknown": 0,
	"Ok":      1,
	"Failed":  2,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{1}
}

func init() {
	proto.RegisterEnum("proto.Type", Type_name, Type_value)
	proto.RegisterEnum("proto.StatusCode", StatusCode_name, StatusCode_value)
}

func init() {
	proto.RegisterFile("proto/common.proto", fileDescriptor_1747d3070a2311a0)
}

var fileDescriptor_1747d3070a2311a0 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0xce, 0xc1, 0x6a, 0x84, 0x30,
	0x10, 0xc6, 0x71, 0x95, 0xd6, 0xc2, 0x48, 0x69, 0x9a, 0xc7, 0x10, 0x62, 0x0e, 0xd2, 0x17, 0x68,
	0xa1, 0xd7, 0x16, 0xd6, 0xbd, 0x78, 0x1b, 0x63, 0x70, 0x83, 0xc9, 0x8c, 0xc4, 0xb8, 0xcb, 0xbe,
	0xfd, 0x42, 0xd8, 0xd3, 0x8f, 0xef, 0x3b, 0xfd, 0x41, 0x6e, 0x91, 0x13, 0x6b, 0xc3, 0x21, 0x30,
	0x75, 0x79, 0xc8, 0xd7, 0x4c, 0xdb, 0xc2, 0xcb, 0x70, 0xdf, 0xac, 0xfc, 0x80, 0xe6, 0x3f, 0x72,
	0xe0, 0xe4, 0x98, 0xd0, 0x8b, 0x42, 0x7e, 0xc2, 0xfb, 0x10, 0x91, 0x76, 0x34, 0xcf, 0xab, 0x6c,
	0x15, 0xc0, 0x29, 0x61, 0x3a, 0xf6, 0x1f, 0x9e, 0xad, 0x6c, 0xe0, 0xed, 0x4c, 0x2b, 0xf1, 0x8d,
	0x44, 0x21, 0x6b, 0xa8, 0xfe, 0x56, 0x51, 0x4a, 0x80, 0xfa, 0x17, 0x9d, 0xb7, 0xb3, 0xa8, 0xbe,
	0xbf, 0xc6, 0x7e, 0x71, 0xe9, 0x72, 0x4c, 0x9d, 0xe1, 0xa0, 0x47, 0x0e, 0x98, 0x58, 0xdb, 0x80,
	0xce, 0xab, 0xdd, 0xc6, 0xab, 0x33, 0x56, 0x19, 0xef, 0x2c, 0x25, 0xb5, 0xb0, 0x47, 0x5a, 0x74,
	0x2e, 0x9a, 0xea, 0x4c, 0xff, 0x08, 0x00, 0x00, 0xff, 0xff, 0x1d, 0xfd, 0x5d, 0x11, 0xb5, 0x00,
	0x00, 0x00,
}
